@model WorkoutTracker2.Models.Workout

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Workout</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.WorkoutDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkoutDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkoutDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkoutLength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkoutLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkoutLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <table class="table" id="excerciseSets">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.WorkoutItems.First().Exercise)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WorkoutItems.First().NumberOfSets)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WorkoutItems.First().Equipment)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.WorkoutItems)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Exercise)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberOfSets)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Equipment)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditWorkoutItem", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Add", "AddWorkoutItem", new { id = Model.Id })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
